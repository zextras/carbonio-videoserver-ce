targets=(
  "centos"
  "ubuntu"
)
pkgname="carbonio-videoserver"
pkgver="1.1.2"
pkgrel="3"
pkgdesc="An open source, general purpose, WebRTC server"
pkgdesclong=(
  "An open source, general purpose, WebRTC server"
)
arch="amd64"
maintainer="Zextras <packages@zextras.com"
url="https://zextras.com"
depends:apt=(
  "carbonio-curl"
  "carbonio-ffmpeg"
  "carbonio-libnice"
  "carbonio-libopus"
  "carbonio-librabbitmq-c"
  "carbonio-libsrtp"
  "carbonio-libusrsctp"
  "carbonio-libwebsockets"
  "carbonio-openssl"
  "carbonio-videoserver-confs"
  "cdebconf"
  "debconf"
  "dialog"
  "libc6"
  "libconfig9"
  "libglib2.0-0"
  "libjansson4"
  "libmicrohttpd12"
  "libogg0"
  "libterm-readline-gnu-perl"
  "pending-setups"
  "service-discover"
  "zlib1g"
)
depends:yum=(
  "carbonio-curl"
  "carbonio-ffmpeg"
  "carbonio-libnice"
  "carbonio-libopus"
  "carbonio-librabbitmq-c"
  "carbonio-libsrtp"
  "carbonio-libusrsctp"
  "carbonio-libwebsockets"
  "carbonio-openssl"
  "carbonio-videoserver-confs"
  "jansson"
  "libconfig"
  "libmicrohttpd"
  "libogg"
  "pending-setups"
  "service-discover"
  "zlib"
)
makedepends:apt=(
  "carbonio-curl"
  "carbonio-openssl"
  "gengetopt"
  "libconfig-dev"
  "libjansson-dev"
  "libmicrohttpd-dev"
  "libogg-dev"
  "zlib1g-dev"
)
makedepends:yum=(
  "carbonio-curl"
  "carbonio-openssl"
  "gengetopt"
  "jansson-devel"
  "libconfig-devel"
  "libmicrohttpd-devel"
  "libogg-devel"
  "zlib-devel"
)
debconf_template="carbonio-videoserver.templates"
section="comm"
priority="important"
sources=(
  "https://github.com/meetecho/janus-gateway/archive/refs/tags/v${pkgver}.tar.gz"
  "carbonio-videoserver.templates"
  "carbonio-videoserver.service"
  "carbonio-videoserver"
  "carbonio-videoserver.hcl"
  "carbonio-videoserver-sidecar.service"
  "carbonio-videoserver-setup.sh"
  "intentions.json"
  "policies.json"
  "service-protocol.json"
)
hashsums=(
  "skip"
  "4d374637b4838b9346023a51c296b5d4cdd9e3c6ae8bf796ff28631f9d0aec28"
  "f21207a682102744cd81a96d1d2faa60a856adb83aa87f8ce34ffb43e4934e6e"
  "0e48b4daffd88b2453828c63f303961b151d8c502281c0be6db3859185cdf3a7"
  "42ac03f61de1ea2c6f26ec0dbc47f1aaf971dc66c74555310d527851ec934608"
  "2092df7f948c095119fbbd27d2c969a50942604bc5ed0c96ca1c425461b0cf69"
  "db88dadbaa7ebce1f3c5aa8b6af031096887f6f82c1870b358fd2ca679aa370c"
  "c30836dda6d88e8e8d2fa66b0372536a2284888aa484fafbeee70c957a29f7e6"
  "380b18ddd6b0ed0db03a58ac8e426ec858b91d5e1a332b6b19f389f443af7274"
  "531fc71566b22f3d9ae5662b6cdefe21cd2bc55e73ed01e111e510a6f4d37d6e"
)

build() {
  cd "${srcdir}/janus-gateway-${pkgver}"
  ./autogen.sh
  export LDFLAGS="-Wl,-rpath,/opt/zextras/common/lib -L/opt/zextras/common/lib"
  export CFLAGS="-O2 -I/opt/zextras/common/include"
  export PKG_CONFIG_PATH="/opt/zextras/common/lib/pkgconfig"
  ./configure \
    --prefix=/opt/zextras/common \
    --sysconfdir /etc \
    --disable-docs \
    --disable-turn-rest-api \
    --disable-all-transports \
    --enable-rest \
    --enable-websockets \
    --enable-rabbitmq \
    --disable-all-plugins \
    --enable-plugin-audiobridge \
    --enable-plugin-videoroom \
    --enable-post-processing \
    --disable-all-handlers \
    --enable-websockets-event-handler \
    --enable-rabbitmq-event-handler \
    --disable-json-logger
  make
}

package() {
  cd "${srcdir}/janus-gateway-${pkgver}"
  make DESTDIR="${pkgdir}" install configs

  cd "${srcdir}"
  install -Dm 755 carbonio-videoserver \
    "${pkgdir}/usr/bin/carbonio-videoserver"
  install -Dm 755 carbonio-videoserver.service \
    "${pkgdir}/usr/lib/systemd/system/carbonio-videoserver.service"
  install -Dm 644 carbonio-videoserver-sidecar.service \
    "${pkgdir}/lib/systemd/system/carbonio-videoserver-sidecar.service"
  install -Dm 644 carbonio-videoserver.hcl \
    "${pkgdir}/etc/zextras/service-discover/carbonio-videoserver.hcl"
  install -Dm 644 carbonio-videoserver-setup.sh \
    "${pkgdir}/etc/zextras/pending-setups.d/carbonio-videoserver.sh"
  install -Dm 644 intentions.json \
    "${pkgdir}/etc/carbonio/videoserver/service-discover/intentions.json"
  install -Dm 644 policies.json \
    "${pkgdir}/etc/carbonio/videoserver/service-discover/policies.json"
  install -Dm 644 service-protocol.json \
    "${pkgdir}/etc/carbonio/videoserver/service-discover/service-protocol.json"
  rm -rf "${pkgdir}"/etc/janus
  rm -rf "${pkgdir}"/opt/zextras/common/share/doc
  rm -rf "${pkgdir}"/opt/zextras/common/share/man
  rm -rf "${pkgdir}"/opt/zextras/common/share/janus/demos/
}

preinst:apt() {
  # Automatically added by dh_installinit/11.1.6ubuntu2
  if [ -x "/etc/init.d/carbonio-videoserver" ]; then
  	invoke-rc.d carbonio-videoserver stop || exit 1
  fi
  # End automatically added section
  # Automatically added by dh_systemd_start/11.1.6ubuntu2
  if [ -d /run/systemd/system ]; then
  	deb-systemd-invoke stop 'carbonio-videoserver.service' >/dev/null || true
  fi
  # End automatically added section
}
postinst:apt() {
  . /usr/share/debconf/confmodule
  
  if [ "$1" = "configure" ]; then
  
    # creating videoserver group if it isn't already there
    if ! getent group videoserver >/dev/null; then
      addgroup --system --force-badname --quiet videoserver
    fi
  
    # creating videoserver user if it isn't already there
    if ! getent passwd videoserver >/dev/null; then
      adduser --system --force-badname --quiet \
        --ingroup videoserver \
        --home /var/lib/videoserver \
        --shell /bin/false \
        videoserver
      usermod -c "videoserver WebRTC group" videoserver
    fi
  
    if ! test -d /var/lib/videoserver; then
      mkdir /var/lib/videoserver
      chown -R videoserver:videoserver /var/lib/videoserver
      # This directory can contain sensitive data and should not be world-readable
      chmod 0700 /var/lib/videoserver
    fi
  
    db_input high videoserver/public-ip || true
    db_go
    db_get videoserver/public-ip
    public_ip="$RET"
    api_secret=$(openssl rand -base64 24)
    sed -i "s#nat_1_1_mapping = \"\${PUBLIC_IP_ADDRESS}\"#nat_1_1_mapping = \"$public_ip\"#" /etc/janus/janus.jcfg
    sed -i "s#api_secret = \"\${API_SECRET}\"#api_secret = \"$api_secret\"#" /etc/janus/janus.jcfg
    hostname=$(hostname -f)
    db_subst videoserver/add API_SECRET "${api_secret}"
    db_subst videoserver/add HOSTNAME "${hostname}"
    db_input high videoserver/add || true
    db_go

    if [ -d /run/systemd/system ]; then
      systemctl daemon-reload >/dev/null 2>&1 || :
      systemctl enable carbonio-videoserver.service >/dev/null 2>&1 || :
      systemctl enable carbonio-videoserver-sidecar.service >/dev/null 2>&1 || :
    fi
  fi

  echo "======================================================"
  echo "Carbonio videoserver installed successfully!"
  echo "You must run pending-setups to configure it correctly."
  echo "======================================================"
}

preinst:yum() {
  getent group videoserver >/dev/null || groupadd -r videoserver
  getent passwd videoserver >/dev/null || \
  useradd -r -g videoserver -d /var/lib/videoserver -s /sbin/nologin videoserver

  if [ -d /run/systemd/system ]; then
    systemctl daemon-reload >/dev/null 2>&1 || :
    systemctl enable carbonio-videoserver.service >/dev/null 2>&1 || :
    systemctl enable carbonio-videoserver-sidecar.service >/dev/null 2>&1 || :
  fi
}
postinst:yum() {
  if [ $1 -eq 1 ]; then
    hostname=$(hostname -f)
    api_secret=$(openssl rand -base64 24)
    sed -i "s#api_secret = \"\${API_SECRET}\"#api_secret = \"$api_secret\"#" /etc/janus/janus.jcfg
    cat <<EOF

    echo "================================================================================================="
    echo ".: Congratulations! Every bit is in its right place :."
    echo "             Please execute these steps:"
    echo "* Set \${PUBLIC_IP_ADDRESS} value within /etc/janus/janus.jcfg"
    echo "* Please execute these commands in a mailbox node "
    echo "  as zextras user to complete the setup of the video server:"
    echo "  carbonio chats video-server add ${hostname} port 8188 secret ${api_secret}"
    echo "================================================================================================="
  fi

  if [ -d /run/systemd/system ]; then
    systemctl daemon-reload >/dev/null 2>&1 || :
    systemctl enable carbonio-videoserver.service >/dev/null 2>&1 || :
    systemctl enable carbonio-videoserver-sidecar.service >/dev/null 2>&1 || :
  fi

  echo "======================================================"
  echo "Carbonio videoserver installed successfully!"
  echo "You must run pending-setups to configure it correctly."
  echo "======================================================"
}

prerm() {
  if [ -d /run/systemd/system ]; then
    systemctl --no-reload disable carbonio-videoserver.service >/dev/null 2>&1 || :
    systemctl --no-reload disable carbonio-videoserver-sidecar.service >/dev/null 2>&1 || :
    systemctl stop carbonio-videoserver.service >/dev/null 2>&1 || :
    systemctl stop carbonio-videoserver-sidecar.service >/dev/null 2>&1 || :
  fi
}

postrm:apt() {
  . /usr/share/debconf/confmodule

  if [ "$1" = "purge" ]; then
    if getent passwd videoserver >/dev/null; then
      if which deluser >/dev/null; then
        deluser --system videoserver || echo "Could not remove videoserver user."
      fi
    fi
    if getent group videoserver >/dev/null; then
      if which delgroup >/dev/null; then
        delgroup --system videoserver || echo "Could not remove videoserver group."
      fi
    fi

    hostname=$(hostname -f)
    db_subst videoserver/remove HOSTNAME "${hostname}"
    db_input high videoserver/remove || true
    db_get videoserver/remove
    db_go
  
    db_purge

    rm -f /etc/carbonio/videoserver/service-discover/token
    if [ -d /run/systemd/system ]; then
      systemctl daemon-reload >/dev/null 2>&1 || :
    fi
  fi
}

postrm:yum() {
  rm -f /etc/carbonio/videoserver/service-discover/token
  if [ -d /run/systemd/system ]; then
    systemctl daemon-reload >/dev/null 2>&1 || :
  fi
}
